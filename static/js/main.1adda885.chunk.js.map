{"version":3,"sources":["users.js","App.js","reportWebVitals.js","index.js"],"names":["validateName","required","minLength","maxLength","validateEmail","email","validatePhone","number","validatePassword","validateRequired","UserFilter","props","Filter","TextInput","label","source","alwaysOn","SelectInput","allowEmpty","emptyValue","choices","id","name","UserList","List","filters","Datagrid","TextField","EditButton","UserEdit","Edit","SimpleForm","validate","AutocompleteInput","DateInput","options","format","defaultValue","Date","UserCreate","Create","dataProvider","localStorageDataProvider","App","console","log","Admin","Resource","list","create","edit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1adda885.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {\n    List,\n    Datagrid,\n    TextField,\n    EditButton,\n    Edit,\n    Create,\n    SimpleForm,\n    SelectInput,\n    TextInput,\n    AutocompleteInput,\n    Filter,\n    DateInput\n} from 'react-admin';\nimport {\n    required,\n    minLength,\n    maxLength,\n    number,\n    email\n} from 'react-admin';\n\n//INPUT VALIDATION\nconst validateName = [required(), minLength(2), maxLength(45)];\nconst validateEmail = [email(), required()];\nconst validatePhone = [number(), required()];\nconst validatePassword = [required(), minLength(4)];\nconst validateRequired = required();\n\n\nconst UserFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <SelectInput  label=\"Status\" source=\"status\" allowEmpty emptyValue={null} \n            choices={[\n                { id: 'client', name: 'Client' },\n                { id: 'partner', name: 'Partner' },\n                { id: 'admin', name: 'Admin' },\n            ]}/>\n    </Filter>\n);\n\nexport const UserList = props => (\n    <List filters={<UserFilter />} {...props}>\n        <Datagrid>\n            <TextField source=\"email\"/>\n            <TextField source=\"password\" />\n            <TextField source=\"phone\"/>\n            <TextField source=\"name\"/>\n            <TextField source=\"status\"/>\n            <TextField source=\"created_at\"/>\n            <TextField source=\"last_edit\" />\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport const UserEdit = props => (\n    <Edit {...props}>\n        <SimpleForm>\n                <TextInput source=\"email\" validate={validateEmail}/>\n                <TextInput source=\"password\" validate={validatePassword}/>\n                <TextInput source=\"phone\" validate={validatePhone}/>\n                <TextInput source=\"name\" validate={validateName}/>\n                <AutocompleteInput source=\"status\" validate={validateRequired} choices={[\n                    { id: 'client', name: 'Client' },\n                    { id: 'partner', name: 'Partner' },\n                    { id: 'admin', name: 'Admin' },\n                ]} />\n                <DateInput source=\"last_edit\" validate={validateRequired} options={{ format: 'DD/MM/YYYY' }} defaultValue={new Date()} />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const UserCreate = props => (\n       <Create {...props}>\n           <SimpleForm>\n                <TextInput source=\"email\" validate={validateEmail}/>\n                <TextInput source=\"password\" validate={validatePassword}/>\n                <TextInput source=\"phone\" validate={validatePhone}/>\n                <TextInput source=\"name\" validate={validateName}/>\n                <AutocompleteInput source=\"status\" validate={validateRequired} choices={[\n                    { id: 'client', name: 'Client' },\n                    { id: 'partner', name: 'Partner' },\n                    { id: 'admin', name: 'Admin' },\n                ]} />\n                <DateInput source=\"created_at\" validate={validateRequired} defaultValue={new Date()} />\n            </SimpleForm>\n            \n        </Create>\n    );\n","import './App.css';\nimport { Admin, Resource } from 'react-admin';\nimport localStorageDataProvider from 'ra-data-local-storage';\nimport { UserList, UserEdit, UserCreate } from './users';\nconst dataProvider = localStorageDataProvider();\n\nfunction App() {\n  console.log(dataProvider)\n  return (\n      <Admin dataProvider={dataProvider}>\n        <Resource name=\"users\" list={UserList} create={UserCreate} edit={UserEdit}/>\n      </Admin>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}